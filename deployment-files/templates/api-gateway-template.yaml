# ---------------------- Template Header ----------------------
AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for API Gateway API: Kashishop2API'

# ---------------------- Parameters ----------------------
Parameters:
  EnvPrefix:
    Type: String
    Description: Prefix for naming resources (e.g., dev, test, prod)
    MinLength: 1

# ---------------------- Resources ----------------------
Resources:
  Kashishop2apirestapi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name:
        Fn::Sub: ${EnvPrefix}Kashishop2API
      EndpointConfiguration:
        Types:
        - REGIONAL
  Kashishop2apiUsersIsadminresource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ParentId:
        Ref: Kashishop2apiUsersresource
      PathPart: isadmin
  Kashishop2apiUsersByidAcceptedTransactionsresource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ParentId:
        Ref: Kashishop2apiUsersresource
      PathPart: byid_accepted_transactions
  Kashishop2apiItemsSellerresource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ParentId:
        Ref: Kashishop2apiItemsresource
      PathPart: seller
  Kashishop2apiUsersMailresource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ParentId:
        Ref: Kashishop2apiUsersresource
      PathPart: mail
  Kashishop2apiUsersAllresource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ParentId:
        Ref: Kashishop2apiUsersresource
      PathPart: all
  Kashishop2apiTransactionsByidUpdateStatusresource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ParentId:
        Ref: Kashishop2apiTransactionsresource
      PathPart: byid_update_status
  Kashishop2apiUsersAdminStatisticsresource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ParentId:
        Ref: Kashishop2apiUsersresource
      PathPart: admin_statistics
  Kashishop2apiUsersGetEmailresource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ParentId:
        Ref: Kashishop2apiUsersresource
      PathPart: get_email
  Kashishop2apiUsersByidPendingTransactionsresource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ParentId:
        Ref: Kashishop2apiUsersresource
      PathPart: byid_pending_transactions
  Kashishop2apiItemsAllresource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ParentId:
        Ref: Kashishop2apiItemsresource
      PathPart: all
  Kashishop2apiUsersByidresource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ParentId:
        Ref: Kashishop2apiUsersresource
      PathPart: byid
  Kashishop2apiUsersIsactiveSwitchresource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ParentId:
        Ref: Kashishop2apiUsersresource
      PathPart: isActive_switch
  Kashishop2apiImagesresource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ParentId:
        Fn::GetAtt:
        - Kashishop2apirestapi
        - RootResourceId
      PathPart: Images
  Kashishop2apiTransactionsresource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ParentId:
        Fn::GetAtt:
        - Kashishop2apirestapi
        - RootResourceId
      PathPart: transactions
  Kashishop2apiUsersresource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ParentId:
        Fn::GetAtt:
        - Kashishop2apirestapi
        - RootResourceId
      PathPart: Users
  Kashishop2apiTransactionsBuyerPendingresource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ParentId:
        Ref: Kashishop2apiTransactionsresource
      PathPart: buyer_pending
  Kashishop2apiUsersPendingTransactionsresource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ParentId:
        Ref: Kashishop2apiUsersresource
      PathPart: pending_transactions
  Kashishop2apiItemsresource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ParentId:
        Fn::GetAtt:
        - Kashishop2apirestapi
        - RootResourceId
      PathPart: Items
  Kashishop2apiItemsIsactiveSwitchresource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ParentId:
        Ref: Kashishop2apiItemsresource
      PathPart: isActive_switch
  Kashishop2apiUsersIsadmingetmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersIsadminresource
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${EnvPrefix}-is_admin_by_id/invocations
        IntegrationHttpMethod: POST
        Credentials:
          Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/LabRole
        RequestParameters:
          integration.request.querystring.userID: method.request.querystring.userID
        RequestTemplates:
          application/json: "{\r\n  \"queryStringParameters\": {\r\n    \"userID\"\
            : \"$input.params('userID')\"\r\n  }\r\n}\r\n"
        PassthroughBehavior: WHEN_NO_TEMPLATES
        ContentHandling: CONVERT_TO_TEXT
        TimeoutInMillis: 29000
        CacheNamespace: 01d2bf
        CacheKeyParameters: []
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Origin: false
      RequestParameters:
        method.request.querystring.userID: true
  Kashishop2apiUsersIsadminoptionsmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersIsadminresource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: '''Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'''
            method.response.header.Access-Control-Allow-Methods: '''GET,POST,PUT,DELETE,OPTIONS'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Headers: false
          method.response.header.Access-Control-Allow-Methods: false
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiUsersByidAcceptedTransactionsgetmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersByidAcceptedTransactionsresource
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${EnvPrefix}-get_user_transactions/invocations
        IntegrationHttpMethod: POST
        Credentials:
          Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/LabRole
        RequestParameters:
          integration.request.querystring.userID: method.request.querystring.userID
        RequestTemplates:
          application/json: "{\n  \"queryStringParameters\": {\n    \"userID\": \"\
            $input.params('userID')\"\n  }\n}"
        PassthroughBehavior: WHEN_NO_MATCH
        ContentHandling: CONVERT_TO_TEXT
        TimeoutInMillis: 29000
        CacheNamespace: 3afhcg
        CacheKeyParameters: []
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Origin: false
      RequestParameters:
        method.request.querystring.userID: true
  Kashishop2apiUsersByidAcceptedTransactionsoptionsmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersByidAcceptedTransactionsresource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: '''Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'''
            method.response.header.Access-Control-Allow-Methods: '''GET,POST,PUT,DELETE,OPTIONS'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Headers: false
          method.response.header.Access-Control-Allow-Methods: false
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiItemsSellergetmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiItemsSellerresource
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${EnvPrefix}-get_items_by_seller/invocations
        IntegrationHttpMethod: POST
        Credentials:
          Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/LabRole
        RequestParameters:
          integration.request.querystring.sellerID: method.request.querystring.sellerID
        RequestTemplates:
          application/json: "{\r\n  \"queryStringParameters\": {\r\n    \"sellerID\"\
            : \"$input.params('sellerID')\"\r\n  }\r\n}\r\n"
        PassthroughBehavior: WHEN_NO_TEMPLATES
        ContentHandling: CONVERT_TO_TEXT
        TimeoutInMillis: 29000
        CacheNamespace: 4ooejc
        CacheKeyParameters: []
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Origin: false
      RequestParameters:
        method.request.querystring.sellerID: true
  Kashishop2apiItemsSelleroptionsmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiItemsSellerresource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: '''Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'''
            method.response.header.Access-Control-Allow-Methods: '''GET,POST,PUT,DELETE,OPTIONS'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Headers: false
          method.response.header.Access-Control-Allow-Methods: false
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiUsersMailoptionsmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersMailresource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: '''Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'''
            method.response.header.Access-Control-Allow-Methods: '''GET,POST,PUT,DELETE,OPTIONS'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Headers: false
          method.response.header.Access-Control-Allow-Methods: false
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiUsersMailpostmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersMailresource
      HttpMethod: POST
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS_PROXY
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${EnvPrefix}-send_mail/invocations
        IntegrationHttpMethod: POST
        Credentials:
          Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/LabRole
        PassthroughBehavior: WHEN_NO_MATCH
        ContentHandling: CONVERT_TO_TEXT
        TimeoutInMillis: 29000
        CacheNamespace: 78l0qj
        CacheKeyParameters: []
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiUsersAllgetmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersAllresource
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${EnvPrefix}-get_all_users/invocations
        IntegrationHttpMethod: POST
        Credentials:
          Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/LabRole
        PassthroughBehavior: WHEN_NO_MATCH
        ContentHandling: CONVERT_TO_TEXT
        TimeoutInMillis: 29000
        CacheNamespace: 7f8ipf
        CacheKeyParameters: []
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiUsersAlloptionsmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersAllresource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: '''Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'''
            method.response.header.Access-Control-Allow-Methods: '''GET,POST,PUT,DELETE,OPTIONS'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Headers: false
          method.response.header.Access-Control-Allow-Methods: false
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiTransactionsByidUpdateStatusoptionsmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiTransactionsByidUpdateStatusresource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: '''Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'''
            method.response.header.Access-Control-Allow-Methods: '''GET,POST,PUT,DELETE,OPTIONS'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Headers: false
          method.response.header.Access-Control-Allow-Methods: false
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiTransactionsByidUpdateStatusputmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiTransactionsByidUpdateStatusresource
      HttpMethod: PUT
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS_PROXY
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${EnvPrefix}-update_transaction_status/invocations
        IntegrationHttpMethod: POST
        Credentials:
          Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/LabRole
        PassthroughBehavior: WHEN_NO_MATCH
        ContentHandling: CONVERT_TO_TEXT
        TimeoutInMillis: 29000
        CacheNamespace: bq8cuw
        CacheKeyParameters: []
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiUsersAdminStatisticsgetmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersAdminStatisticsresource
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${EnvPrefix}-admin_statistics/invocations
        IntegrationHttpMethod: POST
        Credentials:
          Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/LabRole
        PassthroughBehavior: WHEN_NO_MATCH
        ContentHandling: CONVERT_TO_TEXT
        TimeoutInMillis: 29000
        CacheNamespace: cd8la5
        CacheKeyParameters: []
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiUsersAdminStatisticsoptionsmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersAdminStatisticsresource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: '''Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'''
            method.response.header.Access-Control-Allow-Methods: '''GET,POST,PUT,DELETE,OPTIONS'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Headers: false
          method.response.header.Access-Control-Allow-Methods: false
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiUsersGetEmailgetmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersGetEmailresource
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${EnvPrefix}-get_user_email_by_id/invocations
        IntegrationHttpMethod: POST
        Credentials:
          Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/LabRole
        RequestParameters:
          integration.request.querystring.userID: method.request.querystring.userID
        RequestTemplates:
          application/json: "{\r\n  \"queryStringParameters\": {\r\n    \"userID\"\
            : \"$input.params('userID')\"\r\n  }\r\n}"
        PassthroughBehavior: WHEN_NO_MATCH
        ContentHandling: CONVERT_TO_TEXT
        TimeoutInMillis: 29000
        CacheNamespace: eoyfxt
        CacheKeyParameters: []
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Origin: false
      RequestParameters:
        method.request.querystring.userID: true
  Kashishop2apiUsersGetEmailoptionsmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersGetEmailresource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: '''Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'''
            method.response.header.Access-Control-Allow-Methods: '''GET,POST,PUT,DELETE,OPTIONS'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Headers: false
          method.response.header.Access-Control-Allow-Methods: false
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiUsersByidPendingTransactionsoptionsmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersByidPendingTransactionsresource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: '''Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'''
            method.response.header.Access-Control-Allow-Methods: '''GET,POST,PUT,DELETE,OPTIONS'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Headers: false
          method.response.header.Access-Control-Allow-Methods: false
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiItemsAllgetmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiItemsAllresource
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${EnvPrefix}-get_all_items_admin/invocations
        IntegrationHttpMethod: POST
        Credentials:
          Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/LabRole
        PassthroughBehavior: WHEN_NO_MATCH
        ContentHandling: CONVERT_TO_TEXT
        TimeoutInMillis: 29000
        CacheNamespace: hljhop
        CacheKeyParameters: []
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiItemsAlloptionsmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiItemsAllresource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: '''Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'''
            method.response.header.Access-Control-Allow-Methods: '''GET,POST,PUT,DELETE,OPTIONS'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Headers: false
          method.response.header.Access-Control-Allow-Methods: false
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiUsersByidgetmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersByidresource
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${EnvPrefix}-get_user_by_id/invocations
        IntegrationHttpMethod: POST
        Credentials:
          Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/LabRole
        RequestParameters:
          integration.request.querystring.userID: method.request.querystring.userID
        RequestTemplates:
          application/json: "{\r\n  \"queryStringParameters\": {\r\n    \"userID\"\
            : \"$input.params('userID')\"\r\n  }\r\n}"
        PassthroughBehavior: WHEN_NO_MATCH
        ContentHandling: CONVERT_TO_TEXT
        TimeoutInMillis: 29000
        CacheNamespace: hya473
        CacheKeyParameters: []
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Origin: false
      RequestParameters:
        method.request.querystring.userID: true
  Kashishop2apiUsersByidoptionsmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersByidresource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: '''Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'''
            method.response.header.Access-Control-Allow-Methods: '''GET,POST,PUT,DELETE,OPTIONS'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Headers: false
          method.response.header.Access-Control-Allow-Methods: false
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiUsersIsactiveSwitchoptionsmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersIsactiveSwitchresource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: '''Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'''
            method.response.header.Access-Control-Allow-Methods: '''GET,POST,PUT,DELETE,OPTIONS'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Headers: false
          method.response.header.Access-Control-Allow-Methods: false
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiUsersIsactiveSwitchputmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersIsactiveSwitchresource
      HttpMethod: PUT
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS_PROXY
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${EnvPrefix}-user_isactive_switch/invocations
        IntegrationHttpMethod: POST
        Credentials:
          Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/LabRole
        PassthroughBehavior: WHEN_NO_MATCH
        ContentHandling: CONVERT_TO_TEXT
        TimeoutInMillis: 29000
        CacheNamespace: ja8yyv
        CacheKeyParameters: []
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiImagesoptionsmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiImagesresource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: '''Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'''
            method.response.header.Access-Control-Allow-Methods: '''GET,POST,PUT,DELETE,OPTIONS'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Headers: false
          method.response.header.Access-Control-Allow-Methods: false
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiImagespostmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiImagesresource
      HttpMethod: POST
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS_PROXY
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${EnvPrefix}-upload_image/invocations
        IntegrationHttpMethod: POST
        Credentials:
          Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/LabRole
        PassthroughBehavior: WHEN_NO_MATCH
        ContentHandling: CONVERT_TO_TEXT
        TimeoutInMillis: 29000
        CacheNamespace: l7ine4
        CacheKeyParameters: []
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiTransactionsoptionsmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiTransactionsresource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: '''Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'''
            method.response.header.Access-Control-Allow-Methods: '''GET,POST,PUT,DELETE,OPTIONS'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Headers: false
          method.response.header.Access-Control-Allow-Methods: false
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiTransactionspostmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiTransactionsresource
      HttpMethod: POST
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS_PROXY
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${EnvPrefix}-add_transaction/invocations
        IntegrationHttpMethod: POST
        Credentials:
          Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/LabRole
        PassthroughBehavior: WHEN_NO_MATCH
        ContentHandling: CONVERT_TO_TEXT
        TimeoutInMillis: 29000
        CacheNamespace: p6j74s
        CacheKeyParameters: []
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiUsersgetmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersresource
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${EnvPrefix}-get_user_by_id/invocations
        IntegrationHttpMethod: POST
        Credentials:
          Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/LabRole
        RequestParameters:
          integration.request.querystring.userID: method.request.querystring.userID
        RequestTemplates:
          application/json: "{\n  \"queryStringParameters\": {\n    \"userID\": \"\
            $input.params('userID')\"\n  }\n}"
        PassthroughBehavior: WHEN_NO_MATCH
        ContentHandling: CONVERT_TO_TEXT
        TimeoutInMillis: 29000
        CacheNamespace: r9tbsc
        CacheKeyParameters: []
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Origin: false
      RequestParameters:
        method.request.querystring.userID: true
  Kashishop2apiUsersoptionsmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersresource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: '''Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'''
            method.response.header.Access-Control-Allow-Methods: '''GET,POST,PUT,DELETE,OPTIONS'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Headers: false
          method.response.header.Access-Control-Allow-Methods: false
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiUsersputmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersresource
      HttpMethod: PUT
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${EnvPrefix}-update_cognito_user/invocations
        IntegrationHttpMethod: POST
        Credentials:
          Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/LabRole
        RequestParameters:
          integration.request.querystring.userID: method.request.querystring.userID
        RequestTemplates:
          application/json: "{\r\n  \"queryStringParameters\": {\r\n    \"userID\"\
            : \"$input.params('userID')\"\r\n  },\r\n  \"body\": $input.body\r\n}\r\
            \n"
        PassthroughBehavior: WHEN_NO_TEMPLATES
        ContentHandling: CONVERT_TO_TEXT
        TimeoutInMillis: 29000
        CacheNamespace: r9tbsc
        CacheKeyParameters: []
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Origin: false
      RequestParameters:
        method.request.querystring.userID: true
  Kashishop2apiTransactionsBuyerPendinggetmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiTransactionsBuyerPendingresource
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${EnvPrefix}-get_pending_items/invocations
        IntegrationHttpMethod: POST
        Credentials:
          Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/LabRole
        RequestParameters:
          integration.request.querystring.buyerID: method.request.querystring.buyerID
        RequestTemplates:
          application/json: "{\r\n  \"queryStringParameters\": {\r\n    \"buyerID\"\
            : \"$input.params('buyerID')\"\r\n  }\r\n}\r\n"
        PassthroughBehavior: WHEN_NO_MATCH
        ContentHandling: CONVERT_TO_TEXT
        TimeoutInMillis: 29000
        CacheNamespace: rtwqbo
        CacheKeyParameters: []
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Origin: false
      RequestParameters:
        method.request.querystring.buyerID: true
  Kashishop2apiTransactionsBuyerPendingoptionsmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiTransactionsBuyerPendingresource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: '''Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'''
            method.response.header.Access-Control-Allow-Methods: '''GET,POST,PUT,DELETE,OPTIONS'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Headers: false
          method.response.header.Access-Control-Allow-Methods: false
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiUsersPendingTransactionsgetmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersPendingTransactionsresource
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${EnvPrefix}-get_user_pending_transactions/invocations
        IntegrationHttpMethod: POST
        Credentials:
          Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/LabRole
        RequestParameters:
          integration.request.querystring.userID: method.request.querystring.userID
        RequestTemplates:
          application/json: "{\r\n  \"queryStringParameters\": {\r\n    \"userID\"\
            : \"$input.params('userID')\"\r\n  }\r\n}"
        PassthroughBehavior: WHEN_NO_MATCH
        ContentHandling: CONVERT_TO_TEXT
        TimeoutInMillis: 29000
        CacheNamespace: t93pvm
        CacheKeyParameters: []
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Origin: false
      RequestParameters:
        method.request.querystring.userID: true
  Kashishop2apiUsersPendingTransactionsoptionsmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiUsersPendingTransactionsresource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: '''Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'''
            method.response.header.Access-Control-Allow-Methods: '''GET,POST,PUT,DELETE,OPTIONS'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Headers: false
          method.response.header.Access-Control-Allow-Methods: false
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiItemsgetmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiItemsresource
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${EnvPrefix}-get_items/invocations
        IntegrationHttpMethod: POST
        Credentials:
          Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/LabRole
        PassthroughBehavior: WHEN_NO_MATCH
        ContentHandling: CONVERT_TO_TEXT
        TimeoutInMillis: 29000
        CacheNamespace: vftt16
        CacheKeyParameters: []
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiItemsoptionsmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiItemsresource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: '''Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'''
            method.response.header.Access-Control-Allow-Methods: '''GET,POST,PUT,DELETE,OPTIONS'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Headers: false
          method.response.header.Access-Control-Allow-Methods: false
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiItemspostmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiItemsresource
      HttpMethod: POST
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS_PROXY
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${EnvPrefix}-add_item/invocations
        IntegrationHttpMethod: POST
        Credentials:
          Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/LabRole
        PassthroughBehavior: WHEN_NO_MATCH
        ContentHandling: CONVERT_TO_TEXT
        TimeoutInMillis: 29000
        CacheNamespace: vftt16
        CacheKeyParameters: []
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiItemsIsactiveSwitchoptionsmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiItemsIsactiveSwitchresource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: '''Content-Type,Authorization,X-Api-Key,X-Amz-Date,X-Amz-Security-Token'''
            method.response.header.Access-Control-Allow-Methods: '''GET,POST,PUT,DELETE,OPTIONS'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Headers: false
          method.response.header.Access-Control-Allow-Methods: false
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apiItemsIsactiveSwitchputmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      ResourceId:
        Ref: Kashishop2apiItemsIsactiveSwitchresource
      HttpMethod: PUT
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Type: AWS_PROXY
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${EnvPrefix}-item_isactive_switch/invocations
        IntegrationHttpMethod: POST
        Credentials:
          Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/LabRole
        PassthroughBehavior: WHEN_NO_MATCH
        ContentHandling: CONVERT_TO_TEXT
        TimeoutInMillis: 29000
        CacheNamespace: w3su1j
        CacheKeyParameters: []
        IntegrationResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: '''*'''
      MethodResponses:
      - StatusCode: '200'
        ResponseModels:
          application/json: Empty
        ResponseParameters:
          method.response.header.Access-Control-Allow-Origin: false
  Kashishop2apideployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
    - Kashishop2apiUsersIsadmingetmethod
    - Kashishop2apiUsersIsadminoptionsmethod
    - Kashishop2apiUsersIsadminoptionsmethod
    - Kashishop2apiUsersIsadminoptionsmethod
    - Kashishop2apiUsersByidAcceptedTransactionsgetmethod
    - Kashishop2apiUsersByidAcceptedTransactionsoptionsmethod
    - Kashishop2apiUsersByidAcceptedTransactionsoptionsmethod
    - Kashishop2apiUsersByidAcceptedTransactionsoptionsmethod
    - Kashishop2apiItemsSellergetmethod
    - Kashishop2apiItemsSelleroptionsmethod
    - Kashishop2apiItemsSelleroptionsmethod
    - Kashishop2apiItemsSelleroptionsmethod
    - Kashishop2apiUsersMailoptionsmethod
    - Kashishop2apiUsersMailoptionsmethod
    - Kashishop2apiUsersMailpostmethod
    - Kashishop2apiUsersMailoptionsmethod
    - Kashishop2apiUsersAllgetmethod
    - Kashishop2apiUsersAlloptionsmethod
    - Kashishop2apiUsersAlloptionsmethod
    - Kashishop2apiUsersAlloptionsmethod
    - Kashishop2apiTransactionsByidUpdateStatusoptionsmethod
    - Kashishop2apiTransactionsByidUpdateStatusoptionsmethod
    - Kashishop2apiTransactionsByidUpdateStatusputmethod
    - Kashishop2apiTransactionsByidUpdateStatusoptionsmethod
    - Kashishop2apiUsersAdminStatisticsgetmethod
    - Kashishop2apiUsersAdminStatisticsoptionsmethod
    - Kashishop2apiUsersAdminStatisticsoptionsmethod
    - Kashishop2apiUsersAdminStatisticsoptionsmethod
    - Kashishop2apiUsersGetEmailgetmethod
    - Kashishop2apiUsersGetEmailoptionsmethod
    - Kashishop2apiUsersGetEmailoptionsmethod
    - Kashishop2apiUsersGetEmailoptionsmethod
    - Kashishop2apiUsersByidPendingTransactionsoptionsmethod
    - Kashishop2apiUsersByidPendingTransactionsoptionsmethod
    - Kashishop2apiItemsAllgetmethod
    - Kashishop2apiItemsAlloptionsmethod
    - Kashishop2apiItemsAlloptionsmethod
    - Kashishop2apiItemsAlloptionsmethod
    - Kashishop2apiUsersByidgetmethod
    - Kashishop2apiUsersByidoptionsmethod
    - Kashishop2apiUsersByidoptionsmethod
    - Kashishop2apiUsersByidoptionsmethod
    - Kashishop2apiUsersIsactiveSwitchoptionsmethod
    - Kashishop2apiUsersIsactiveSwitchoptionsmethod
    - Kashishop2apiUsersIsactiveSwitchputmethod
    - Kashishop2apiUsersIsactiveSwitchoptionsmethod
    - Kashishop2apiImagesoptionsmethod
    - Kashishop2apiImagesoptionsmethod
    - Kashishop2apiImagespostmethod
    - Kashishop2apiImagesoptionsmethod
    - Kashishop2apiTransactionsoptionsmethod
    - Kashishop2apiTransactionsoptionsmethod
    - Kashishop2apiTransactionspostmethod
    - Kashishop2apiTransactionsoptionsmethod
    - Kashishop2apiUsersgetmethod
    - Kashishop2apiUsersoptionsmethod
    - Kashishop2apiUsersoptionsmethod
    - Kashishop2apiUsersoptionsmethod
    - Kashishop2apiUsersputmethod
    - Kashishop2apiUsersoptionsmethod
    - Kashishop2apiTransactionsBuyerPendinggetmethod
    - Kashishop2apiTransactionsBuyerPendingoptionsmethod
    - Kashishop2apiTransactionsBuyerPendingoptionsmethod
    - Kashishop2apiTransactionsBuyerPendingoptionsmethod
    - Kashishop2apiUsersPendingTransactionsgetmethod
    - Kashishop2apiUsersPendingTransactionsoptionsmethod
    - Kashishop2apiUsersPendingTransactionsoptionsmethod
    - Kashishop2apiUsersPendingTransactionsoptionsmethod
    - Kashishop2apiItemsgetmethod
    - Kashishop2apiItemsoptionsmethod
    - Kashishop2apiItemsoptionsmethod
    - Kashishop2apiItemsoptionsmethod
    - Kashishop2apiItemspostmethod
    - Kashishop2apiItemsoptionsmethod
    - Kashishop2apiItemsIsactiveSwitchoptionsmethod
    - Kashishop2apiItemsIsactiveSwitchoptionsmethod
    - Kashishop2apiItemsIsactiveSwitchputmethod
    - Kashishop2apiItemsIsactiveSwitchoptionsmethod
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      StageName:
        Fn::Sub: ${EnvPrefix}-20250606122643687137
  Kashishop2apierrormodel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      Name:
        Fn::Sub: ${EnvPrefix}Error
      ContentType: application/json
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: Error Schema
        type: object
        properties:
          message:
            type: string
  Kashishop2apiemptymodel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId:
        Ref: Kashishop2apirestapi
      Name:
        Fn::Sub: ${EnvPrefix}Empty
      ContentType: application/json
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: Empty Schema
        type: object
  Kashishop2apidefault4xxgatewayresponse:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      ResponseType: DEFAULT_4XX
      RestApiId:
        Ref: Kashishop2apirestapi
      ResponseParameters:
        gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
        gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
        gatewayresponse.header.Access-Control-Allow-Methods: '''*'''
      StatusCode: '200'
  Kashishop2apidefault5xxgatewayresponse:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      ResponseType: DEFAULT_5XX
      RestApiId:
        Ref: Kashishop2apirestapi
      ResponseParameters:
        gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
        gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
        gatewayresponse.header.Access-Control-Allow-Methods: '''*'''
      StatusCode: '200'

# ---------------------- Outputs ----------------------
Outputs:
  ApiEndpoint:
    Description: Invoke URL for the deployed API
    Value:
      Fn::Sub: https://${Kashishop2apirestapi}.execute-api.${AWS::Region}.amazonaws.com/20250606122643687137
